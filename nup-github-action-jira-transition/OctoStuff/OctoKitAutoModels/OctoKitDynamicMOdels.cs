using System;
using System.Collections.Generic;
using System.Globalization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;

namespace DotNet.GitHubAction.OctoStuff.OctoKitAutoModels;
// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var welcome = Welcome.FromJson(jsonString);

public partial class root
{
    [JsonProperty("data")] public Data Data { get; set; }
}

public partial class Data
{
    [JsonProperty("repository")] public Repository Repository { get; set; }
}

public partial class Repository
{
    [JsonProperty("ref")] public Ref Ref { get; set; }
}

public partial class Ref
{
    [JsonProperty("name")] public string Name { get; set; }

    [JsonProperty("target")] public Target Target { get; set; }
}

public partial class Target
{
    [JsonProperty("history")] public History History { get; set; }
}

public partial class History
{
    [JsonProperty("edges")] public Edge[] Edges { get; set; }
}

public partial class Edge
{
    [JsonProperty("node")] public Node Node { get; set; }
}

public partial class Node
{
    [JsonProperty("committedDate")] public DateTimeOffset CommittedDate { get; set; }

    [JsonProperty("message")] public string Message { get; set; }

    [JsonProperty("oid")] public string Oid { get; set; }
    [JsonProperty("url")] public string Url { get; set; }
}

public partial class root
{
    public static root FromJson(string json) => JsonConvert.DeserializeObject<root>(json, Converter.Settings);
}

public static class Serialize
{
    public static string ToJson(this root self) => JsonConvert.SerializeObject(self, Converter.Settings);
}

internal static class Converter
{
    public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
    {
        MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
        DateParseHandling = DateParseHandling.None,
        Converters =
        {
            new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
        },
    };
}